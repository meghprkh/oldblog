<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Megh&#39;s Blog</title>
  
  <link href="/blog/tags/Meson%20Build/atom.xml" rel="self"/>
  
  <link href="https://meghprkh.github.io/blog/"/>
  <updated>2016-07-10T19:50:50.168Z</updated>
  <id>https://meghprkh.github.io/blog/</id>
  
  <author>
    <name>Megh Parikh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Adventures with the Meson Build System and a GTK Playground</title>
    <link href="https://meghprkh.github.io/blog/2016/07/11/Adventures-with-the-Meson-Build-System-and-a-GTK-Playground/"/>
    <id>https://meghprkh.github.io/blog/2016/07/11/Adventures-with-the-Meson-Build-System-and-a-GTK-Playground/</id>
    <published>2016-07-10T19:30:04.000Z</published>
    <updated>2016-07-10T19:50:50.168Z</updated>
    
    <content type="html"><![CDATA[<p>This post describes some of my experience with the <a href="http://mesonbuild.com/" title="Meson Build" target="_blank" rel="external">Meson Build</a> system. Also I have created a playground for GTK which I use to create simple protoypes with some functionality. The really nice thing about Meson is its <em>python-ish</em>/<em>lua-ish</em> syntax. The other thing is that it is <em>really</em> fast.</p>
<a id="more"></a>
<h2 id="My-experience"><a href="#My-experience" class="headerlink" title="My experience"></a>My experience</h2><p>As a newbie I found Automake unfriendly (maybe because of its primitive m4 macro system). So I was looking for something quick to learn for building my <a href="https://github.com/meghprkh/libgamepad" title="LibGamepad" target="_blank" rel="external">LibGamepad</a> library. Initially I opted for the awesome <a href="https://github.com/rastersoft/autovala" target="_blank" rel="external">Autovala</a>. But then I realized that while super-easy, it was not flexible. I wanted conditional compilation (per-platform) but could not do it. Then while I was looking at the <a href="https://cmake.org/" target="_blank" rel="external">CMake</a> files generated by Autovala, they too felt kind of cryptic, so I decided to start from scratch and write the CMake files on my own. Still even CMakeâ€™s syntax was kind of weird and <em>macro-ish</em>. Then I tried a hand at Meson. Surprisingly I was able to easily build simple Vala programs without giving it much time.</p>
<h2 id="The-neat-language"><a href="#The-neat-language" class="headerlink" title="The neat language"></a>The neat language</h2><p>In Meson, you feel like you are interacting with a higher-order language. You get immutable arrays and strings. Your interaction with the compiler modules is through objects. In short, <em>its just amazing</em>. I could have elaborated this section and written some features, but then you can find it on the <a href="https://github.com/mesonbuild/meson/wiki" target="_blank" rel="external">Meson Wiki</a>.</p>
<h2 id="Some-reference-links"><a href="#Some-reference-links" class="headerlink" title="Some reference links"></a>Some reference links</h2><ul>
<li>Tutorial: <a href="https://github.com/mesonbuild/meson/wiki/Tutorial" target="_blank" rel="external">https://github.com/mesonbuild/meson/wiki/Tutorial</a></li>
<li>Indepth Tutorial: <a href="https://github.com/mesonbuild/meson/wiki/IndepthTutorial" target="_blank" rel="external">https://github.com/mesonbuild/meson/wiki/IndepthTutorial</a></li>
<li>Vala example: <a href="https://github.com/mesonbuild/meson/wiki/Vala" target="_blank" rel="external">https://github.com/mesonbuild/meson/wiki/Vala</a></li>
<li>GNOME module: <a href="https://github.com/mesonbuild/meson/wiki/Gnome-module" target="_blank" rel="external">https://github.com/mesonbuild/meson/wiki/Gnome-module</a></li>
<li>Reference Manual: <a href="https://github.com/mesonbuild/meson/wiki/Reference-Manual" target="_blank" rel="external">https://github.com/mesonbuild/meson/wiki/Reference-Manual</a></li>
<li><em>Note</em>: On Fedora it is <code>ninja-build</code> and not <code>ninja</code></li>
</ul>
<h2 id="A-GTK-Playground-A-starter-kit"><a href="#A-GTK-Playground-A-starter-kit" class="headerlink" title="A GTK Playground / A starter kit"></a>A GTK Playground / A starter kit</h2><p>Ever want to prototype some mockup without fiddling with your main application? I created a small playground which I use for creating prototypes <a href="https://github.com/meghprkh/valagtk" target="_blank" rel="external">https://github.com/meghprkh/valagtk</a> . You can simply open <a href="https://glade.gnome.org/" target="_blank" rel="external">Glade</a>, create your prototype and add some interactivity using <a href="https://blogs.gnome.org/tvb/2013/05/29/composite-templates-lands-in-vala/" target="_blank" rel="external">GtkTemplate</a> in your Vala code and BOOM! This uses the Meson build system to give you an easy-to-extend starter along with super-fast builds.</p>
<p>Please leave your comments in the comments section =).</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This post describes some of my experience with the &lt;a href=&quot;http://mesonbuild.com/&quot; title=&quot;Meson Build&quot;&gt;Meson Build&lt;/a&gt; system. Also I have created a playground for GTK which I use to create simple protoypes with some functionality. The really nice thing about Meson is its &lt;em&gt;python-ish&lt;/em&gt;/&lt;em&gt;lua-ish&lt;/em&gt; syntax. The other thing is that it is &lt;em&gt;really&lt;/em&gt; fast.&lt;/p&gt;
    
    </summary>
    
      <category term="Opensource" scheme="https://meghprkh.github.io/blog/categories/Opensource/"/>
    
    
      <category term="GNOME" scheme="https://meghprkh.github.io/blog/tags/GNOME/"/>
    
      <category term="Meson Build" scheme="https://meghprkh.github.io/blog/tags/Meson-Build/"/>
    
  </entry>
  
</feed>
